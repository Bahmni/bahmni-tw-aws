---

- name: update bastion dns records for public name resolution
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PublicHostedZone }}"
    record: "{{ Bastion_Env.Tags.environment }}.{{ PublicHostedZone }}"
    type: A
    ttl: 300
    value: "{{ bastion_instance_fact.public_ip }}"
    overwrite: true

- name: update qa dns for local name resolution
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PrivateHostedZone }}"
    private_zone: yes
    record: "{{ QA_Env.Tags.environment }}{{ item.1.msg }}.{{ PrivateHostedZone }}"
    type: A
    ttl: 300
    value: "{{ item.0.private_ip }}"
    overwrite: true
  with_together:
    - qa_instances.tagged_instances
    - qa_sequence.results

- name: update showcase private dns for local name resolution
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PrivateHostedZone }}"
    private_zone: yes
    record: "{{ Showcase_Env.Tags.environment }}{{ item.1.msg }}.{{ PrivateHostedZone }}"
    type: A
    ttl: 300
    value: "{{ item.0.private_ip }}"
    overwrite: true
  with_together:
    - showcase_instances.tagged_instances
    - showcase_sequence.results

- name: update private proxy dns for local name resolution
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PrivateHostedZone }}"
    private_zone: yes
    record: "{{ Proxy_Env.Tags.environment }}{{ item.1.msg }}.{{ PrivateHostedZone }}"
    type: A
    ttl: 300
    value: "{{ item.0.private_ip }}"
    overwrite: true
  with_together:
    - proxy_instances.tagged_instances
    - proxy_sequence.results

- name: update public proxy dns records for public name resolution
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PublicHostedZone }}"
    record: "{{ Proxy_Env.Tags.environment }}{{ item.1.msg }}.{{ PublicHostedZone }}"
    type: A
    ttl: 300
    value: "{{ item.0.public_ip }}"
    overwrite: true
  with_together:
    - proxy_instances.tagged_instances
    - proxy_sequence.results

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
       instance-state-name: running
       'tag:tw_proxy': 'true'
  register: under_tw_proxy_instances

- name: update CNAME for instances guarded under tw proxy to proxy01
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PublicHostedZone }}"
    record: "{{ item.tags.Name }}.{{ PublicHostedZone }}"
    type: CNAME
    ttl: 300
    value: "proxy01.mybahmni.org"
    overwrite: true
  with_items: "{{ under_tw_proxy_instances.instances }}"

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
       instance-state-name: running
       'tag:pub_proxy': 'true'
  register: under_pub_proxy_instances

- name: update CNAME for instances guarded under public proxy to proxy02
  route53:
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    command: create
    zone: "{{ PublicHostedZone }}"
    record: "{{ item.tags.Name }}.{{ PublicHostedZone }}"
    type: CNAME
    ttl: 300
    value: "proxy02.mybahmni.org"
    overwrite: true
  with_items: "{{ under_pub_proxy_instances.instances }}"